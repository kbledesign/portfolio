ADA (Americans with Disabilities Act) compliance in HTML5 involves using various elements and attributes to create web content that is accessible to individuals with disabilities. Here's a list of important ADA compliance elements and attributes in HTML5, along with explanations of what they do:

1. Semantic HTML Elements:
   - Elements like `<header>`, `<nav>`, `<main>`, and `<footer`> provide a clear document structure for assistive technologies.

2. Alternative Text for Images:
   - The `alt` attribute in `<img>` elements provides descriptive alternative text for images, enabling screen readers to convey the content to users who cannot see the images.

3. Landmark Roles:
   - ARIA (Accessible Rich Internet Applications) roles like `role="navigation"`, `role="search"`, and `role="main"` define page landmarks, making navigation easier for screen reader users.

4. Form Labels:
   - The `<label>` element, along with the `for` attribute, associates form labels with their corresponding form controls, ensuring that screen readers announce labels correctly.

5. Fieldset and Legend:
   - The `<fieldset>` element groups related form controls, and the `<legend>` element provides a caption or description for the group.

6. Headings:
   - Use hierarchical heading elements (`<h1>` through `<h6>`) to structure content and provide a logical document outline.

7. Lists:
   - Ordered lists (`<ol>`) and unordered lists (`<ul>`) should be used for structured content, and list items (`<li>`) should be used within these lists.

8. Tables:
   - Tables (`<table>`) should have captions (`<caption>`), headers (`<thead>`), data cells (`<tbody>`), and meaningful table summaries to improve the reading experience for screen reader users.

9. Buttons:
   - Interactive elements should be created using `<button>` elements, making them keyboard accessible and screen reader-friendly.

10. Links and Anchors:
    - Hyperlinks created using the `<a>` element should have descriptive and meaningful text, providing context to users.

11. Access Keys:
    - The `accesskey` attribute can be used to define keyboard shortcuts for navigating to specific parts of a web page.

12. Audio and Video Elements:
    - Use `<audio>` and `<video>` elements with subtitles or captions for multimedia content. Include controls and provide textual alternatives for non-text content.

13. Form Validation:
    - Implement client-side form validation and provide clear error messages for form fields, aiding users in understanding and correcting input errors.

14. Keyboard Navigation:
    - Ensure that all interactive elements are navigable using the keyboard without relying on mouse-based interactions.

15. Skip to Content Link:
    - Include a "Skip to main content" link at the beginning of the page to allow keyboard users to bypass repetitive navigation menus.

16. ARIA Attributes:
    - Use ARIA attributes such as `aria-label`, `aria-labelledby`, and `aria-describedby` to provide additional context for screen reader users.

17. Datalist Element:
    - The `<datalist>` element can be used to provide a list of predefined options for an `<input>` element with the `list` attribute.

18. Meter Element:
    - The `<meter>` element can represent a scalar measurement, such as the current value within a specified range.

19. Progress Element:
    - The `<progress>` element indicates the completion progress of a task or the value within a specified range.

20. Ruby Element:
    - The `<ruby>` element can be used to provide pronunciation annotations for East Asian text.

These HTML5 elements and attributes, along with proper usage and best practices, contribute to creating ADA-compliant web content, ensuring accessibility for individuals with disabilities. It's important to conduct thorough testing and follow accessibility guidelines to achieve full compliance.